on:
  pull_request:
    types: [opened, synchronize]
  
jobs:
  linter:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby: [ '2.5.x' ]
    steps:
      - uses: actions/checkout@v1

      - name: Set up Ruby version
        uses: actions/setup-ruby@master
        with:
          ruby-version : ${{ matrix.ruby }}

      - name: apt-get
        run: |
          sudo apt-get update
          sudo apt-get install libmysqlclient-dev

      - name: Set up bundler
        run: gem install bundler

      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: bundle install
        run: bundle install

      - name: Cache rubocop
        uses: actions/cache@v1
        with:
          path: ~/.cache/rubocop_cache
          key: ${{ runner.os }}-rubocop-${{ github.head_ref }}
          restore-keys: |
            ${{ runner.os }}-rubocop-
            ${{ runner.os }}-rubocop-${{ github.base_ref }}
            ${{ runner.os }}-rubocop-${{ hashFiles('**/.rubocop.yml') }}
  
      - name: Rubocop checks
        id: run_rubocop
        run: | 
          bundle exec rubocop --parallel >> rubocop_out.txt
      
      - name: annotate Rubocop
        if: failure()
        id: annotate_rubocop
        run: |
          echo "::add-matcher::.github/annotations/rubocop.json"
          echo "::set-output name=rubocop-message::$(tail -n 1 rubocop_out.txt)"
          echo "::set-output name=rubocop-log::$(cat rubocop_out.txt)"
          cat rubocop_out.txt

      - name: send slack
        if: failure()
        uses: pullreminders/slack-action@master
        with:
          args: |
            {\
              \"channel\":\"CS9TN6R9S\",\
              \"text"\:\"test\"\
            }
          # args: '{\"channel\":\"CS9TN6R9S\",\"attachments\":[{\"color\":\"#F32013\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*PR Fail:* ${{ github.event.pull_request.title }}\n @${{ github.event.pull_request.user.login }}\"}  },{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"${{ steps.annotate_rubocop.outputs.rubocop-message}}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"<${{ github.event.pull_request.html_url }}|View Pull Request>\"}}]}]}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  rspec:
    needs: linter
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ruby: [ '2.5.x' ]
    steps:
      - run: echo 'rspec!'

  e2e_survey:
    needs: linter
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [ '10' ]
    steps:
      - run: echo 'e2e_survey!'

  e2e_dashboard:
    needs: linter
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [ '10' ]
    steps:
      - run: echo 'e2e_dashboard!'

  build:
    needs: [rspec, e2e_survey, e2e_dashboard]
    runs-on: ubuntu-latest
    steps:
      - run: echo 'deploy!'

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - run: echo 'deploy!'
